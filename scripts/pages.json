[{"name":"expect class SysLog : Log","description":"io.matthewnelson.kmp.log.sys.SysLog","location":"library/sys/io.matthewnelson.kmp.log.sys/-sys-log/index.html","searchKeys":["SysLog","expect class SysLog : Log","io.matthewnelson.kmp.log.sys.SysLog"]},{"name":"expect fun of(min: Log.Level): SysLog","description":"io.matthewnelson.kmp.log.sys.SysLog.Companion.of","location":"library/sys/io.matthewnelson.kmp.log.sys/-sys-log/-companion/of.html","searchKeys":["of","expect fun of(min: Log.Level): SysLog","io.matthewnelson.kmp.log.sys.SysLog.Companion.of"]},{"name":"expect object Companion","description":"io.matthewnelson.kmp.log.sys.SysLog.Companion","location":"library/sys/io.matthewnelson.kmp.log.sys/-sys-log/-companion/index.html","searchKeys":["Companion","expect object Companion","io.matthewnelson.kmp.log.sys.SysLog.Companion"]},{"name":"expect val Debug: SysLog","description":"io.matthewnelson.kmp.log.sys.SysLog.Companion.Debug","location":"library/sys/io.matthewnelson.kmp.log.sys/-sys-log/-companion/-debug.html","searchKeys":["Debug","expect val Debug: SysLog","io.matthewnelson.kmp.log.sys.SysLog.Companion.Debug"]},{"name":"expect val UID: String","description":"io.matthewnelson.kmp.log.sys.SysLog.Companion.UID","location":"library/sys/io.matthewnelson.kmp.log.sys/-sys-log/-companion/-u-i-d.html","searchKeys":["UID","expect val UID: String","io.matthewnelson.kmp.log.sys.SysLog.Companion.UID"]},{"name":"expect val isInstalled: Boolean","description":"io.matthewnelson.kmp.log.sys.SysLog.Companion.isInstalled","location":"library/sys/io.matthewnelson.kmp.log.sys/-sys-log/-companion/is-installed.html","searchKeys":["isInstalled","expect val isInstalled: Boolean","io.matthewnelson.kmp.log.sys.SysLog.Companion.isInstalled"]},{"name":"protected expect open override fun isLoggable(level: Log.Level, domain: String?, tag: String): Boolean","description":"io.matthewnelson.kmp.log.sys.SysLog.isLoggable","location":"library/sys/io.matthewnelson.kmp.log.sys/-sys-log/is-loggable.html","searchKeys":["isLoggable","protected expect open override fun isLoggable(level: Log.Level, domain: String?, tag: String): Boolean","io.matthewnelson.kmp.log.sys.SysLog.isLoggable"]},{"name":"protected expect open override fun log(level: Log.Level, domain: String?, tag: String, msg: String?, t: Throwable?): Boolean","description":"io.matthewnelson.kmp.log.sys.SysLog.log","location":"library/sys/io.matthewnelson.kmp.log.sys/-sys-log/log.html","searchKeys":["log","protected expect open override fun log(level: Log.Level, domain: String?, tag: String, msg: String?, t: Throwable?): Boolean","io.matthewnelson.kmp.log.sys.SysLog.log"]},{"name":"expect abstract class KmpLogKtorLogger : Logger","description":"io.matthewnelson.kmp.log.compat.ktor.KmpLogKtorLogger","location":"library/compat-ktor/io.matthewnelson.kmp.log.compat.ktor/-kmp-log-ktor-logger/index.html","searchKeys":["KmpLogKtorLogger","expect abstract class KmpLogKtorLogger : Logger","io.matthewnelson.kmp.log.compat.ktor.KmpLogKtorLogger"]},{"name":"expect fun of(logger: Log.Logger): KmpLogKtorLogger","description":"io.matthewnelson.kmp.log.compat.ktor.KmpLogKtorLogger.Compat.of","location":"library/compat-ktor/io.matthewnelson.kmp.log.compat.ktor/-kmp-log-ktor-logger/-compat/of.html","searchKeys":["of","expect fun of(logger: Log.Logger): KmpLogKtorLogger","io.matthewnelson.kmp.log.compat.ktor.KmpLogKtorLogger.Compat.of"]},{"name":"expect object Compat","description":"io.matthewnelson.kmp.log.compat.ktor.KmpLogKtorLogger.Compat","location":"library/compat-ktor/io.matthewnelson.kmp.log.compat.ktor/-kmp-log-ktor-logger/-compat/index.html","searchKeys":["Compat","expect object Compat","io.matthewnelson.kmp.log.compat.ktor.KmpLogKtorLogger.Compat"]},{"name":"expect val delegate: Log.Logger","description":"io.matthewnelson.kmp.log.compat.ktor.KmpLogKtorLogger.delegate","location":"library/compat-ktor/io.matthewnelson.kmp.log.compat.ktor/-kmp-log-ktor-logger/delegate.html","searchKeys":["delegate","expect val delegate: Log.Logger","io.matthewnelson.kmp.log.compat.ktor.KmpLogKtorLogger.delegate"]},{"name":"fun Logger.asKmpLogLoggerOrThrow(): Log.Logger","description":"io.matthewnelson.kmp.log.compat.ktor.asKmpLogLoggerOrThrow","location":"library/compat-ktor/io.matthewnelson.kmp.log.compat.ktor/as-kmp-log-logger-or-throw.html","searchKeys":["asKmpLogLoggerOrThrow","fun Logger.asKmpLogLoggerOrThrow(): Log.Logger","io.matthewnelson.kmp.log.compat.ktor.asKmpLogLoggerOrThrow"]},{"name":"inline fun Log.Logger.asKtorLogger(): KmpLogKtorLogger","description":"io.matthewnelson.kmp.log.compat.ktor.asKtorLogger","location":"library/compat-ktor/io.matthewnelson.kmp.log.compat.ktor/as-ktor-logger.html","searchKeys":["asKtorLogger","inline fun Log.Logger.asKtorLogger(): KmpLogKtorLogger","io.matthewnelson.kmp.log.compat.ktor.asKtorLogger"]},{"name":"abstract class KmpLogSLF4JLogger : Logger","description":"io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger","location":"library/compat-slf4j/io.matthewnelson.kmp.log.compat.slf4j/-kmp-log-s-l-f4-j-logger/index.html","searchKeys":["KmpLogSLF4JLogger","abstract class KmpLogSLF4JLogger : Logger","io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger"]},{"name":"fun of(logger: Log.Logger): KmpLogSLF4JLogger","description":"io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger.Compat.of","location":"library/compat-slf4j/io.matthewnelson.kmp.log.compat.slf4j/-kmp-log-s-l-f4-j-logger/-compat/of.html","searchKeys":["of","fun of(logger: Log.Logger): KmpLogSLF4JLogger","io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger.Compat.of"]},{"name":"inline fun Log.Logger.asSLF4JLogger(): KmpLogSLF4JLogger","description":"io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger.Compat.asSLF4JLogger","location":"library/compat-slf4j/io.matthewnelson.kmp.log.compat.slf4j/-kmp-log-s-l-f4-j-logger/-compat/as-s-l-f4-j-logger.html","searchKeys":["asSLF4JLogger","inline fun Log.Logger.asSLF4JLogger(): KmpLogSLF4JLogger","io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger.Compat.asSLF4JLogger"]},{"name":"object Compat","description":"io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger.Compat","location":"library/compat-slf4j/io.matthewnelson.kmp.log.compat.slf4j/-kmp-log-s-l-f4-j-logger/-compat/index.html","searchKeys":["Compat","object Compat","io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger.Compat"]},{"name":"val delegate: Log.Logger","description":"io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger.delegate","location":"library/compat-slf4j/io.matthewnelson.kmp.log.compat.slf4j/-kmp-log-s-l-f4-j-logger/delegate.html","searchKeys":["delegate","val delegate: Log.Logger","io.matthewnelson.kmp.log.compat.slf4j.KmpLogSLF4JLogger.delegate"]},{"name":"Debug","description":"io.matthewnelson.kmp.log.Log.Level.Debug","location":"library/log/io.matthewnelson.kmp.log/-log/-level/-debug/index.html","searchKeys":["Debug","Debug","io.matthewnelson.kmp.log.Log.Level.Debug"]},{"name":"Error","description":"io.matthewnelson.kmp.log.Log.Level.Error","location":"library/log/io.matthewnelson.kmp.log/-log/-level/-error/index.html","searchKeys":["Error","Error","io.matthewnelson.kmp.log.Log.Level.Error"]},{"name":"Fatal","description":"io.matthewnelson.kmp.log.Log.Level.Fatal","location":"library/log/io.matthewnelson.kmp.log/-log/-level/-fatal/index.html","searchKeys":["Fatal","Fatal","io.matthewnelson.kmp.log.Log.Level.Fatal"]},{"name":"Info","description":"io.matthewnelson.kmp.log.Log.Level.Info","location":"library/log/io.matthewnelson.kmp.log/-log/-level/-info/index.html","searchKeys":["Info","Info","io.matthewnelson.kmp.log.Log.Level.Info"]},{"name":"Verbose","description":"io.matthewnelson.kmp.log.Log.Level.Verbose","location":"library/log/io.matthewnelson.kmp.log/-log/-level/-verbose/index.html","searchKeys":["Verbose","Verbose","io.matthewnelson.kmp.log.Log.Level.Verbose"]},{"name":"Warn","description":"io.matthewnelson.kmp.log.Log.Level.Warn","location":"library/log/io.matthewnelson.kmp.log/-log/-level/-warn/index.html","searchKeys":["Warn","Warn","io.matthewnelson.kmp.log.Log.Level.Warn"]},{"name":"abstract class Log","description":"io.matthewnelson.kmp.log.Log","location":"library/log/io.matthewnelson.kmp.log/-log/index.html","searchKeys":["Log","abstract class Log","io.matthewnelson.kmp.log.Log"]},{"name":"class Logger","description":"io.matthewnelson.kmp.log.Log.Logger","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/index.html","searchKeys":["Logger","class Logger","io.matthewnelson.kmp.log.Log.Logger"]},{"name":"const val UID: String","description":"io.matthewnelson.kmp.log.Log.AbortHandler.UID","location":"library/log/io.matthewnelson.kmp.log/-log/-abort-handler/-u-i-d.html","searchKeys":["UID","const val UID: String","io.matthewnelson.kmp.log.Log.AbortHandler.UID"]},{"name":"enum Level : Enum<Log.Level> ","description":"io.matthewnelson.kmp.log.Log.Level","location":"library/log/io.matthewnelson.kmp.log/-log/-level/index.html","searchKeys":["Level","enum Level : Enum<Log.Level> ","io.matthewnelson.kmp.log.Log.Level"]},{"name":"fun Log.Logger.log(level: Log.Level, arguments: Array<out Any?>, t: Throwable?, format: String?): Int","description":"io.matthewnelson.kmp.log.log","location":"library/log/io.matthewnelson.kmp.log/log.html","searchKeys":["log","fun Log.Logger.log(level: Log.Level, arguments: Array<out Any?>, t: Throwable?, format: String?): Int","io.matthewnelson.kmp.log.log"]},{"name":"fun Log.Logger.log(level: Log.Level, t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","description":"io.matthewnelson.kmp.log.log","location":"library/log/io.matthewnelson.kmp.log/log.html","searchKeys":["log","fun Log.Logger.log(level: Log.Level, t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","io.matthewnelson.kmp.log.log"]},{"name":"fun Log.Logger.log(level: Log.Level, t: Throwable?, format: String?, arg: Any?): Int","description":"io.matthewnelson.kmp.log.log","location":"library/log/io.matthewnelson.kmp.log/log.html","searchKeys":["log","fun Log.Logger.log(level: Log.Level, t: Throwable?, format: String?, arg: Any?): Int","io.matthewnelson.kmp.log.log"]},{"name":"fun checkDomain(domain: String?): String?","description":"io.matthewnelson.kmp.log.Log.Logger.Companion.checkDomain","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/-companion/check-domain.html","searchKeys":["checkDomain","fun checkDomain(domain: String?): String?","io.matthewnelson.kmp.log.Log.Logger.Companion.checkDomain"]},{"name":"fun checkTag(tag: String?): String","description":"io.matthewnelson.kmp.log.Log.Logger.Companion.checkTag","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/-companion/check-tag.html","searchKeys":["checkTag","fun checkTag(tag: String?): String","io.matthewnelson.kmp.log.Log.Logger.Companion.checkTag"]},{"name":"fun install(log: Log): Boolean","description":"io.matthewnelson.kmp.log.Log.Root.install","location":"library/log/io.matthewnelson.kmp.log/-log/-root/install.html","searchKeys":["install","fun install(log: Log): Boolean","io.matthewnelson.kmp.log.Log.Root.install"]},{"name":"fun installed(): List<Log>","description":"io.matthewnelson.kmp.log.Log.Root.installed","location":"library/log/io.matthewnelson.kmp.log/-log/-root/installed.html","searchKeys":["installed","fun installed(): List<Log>","io.matthewnelson.kmp.log.Log.Root.installed"]},{"name":"fun isLoggable(level: Log.Level): Boolean","description":"io.matthewnelson.kmp.log.Log.Logger.isLoggable","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/is-loggable.html","searchKeys":["isLoggable","fun isLoggable(level: Log.Level): Boolean","io.matthewnelson.kmp.log.Log.Logger.isLoggable"]},{"name":"fun log(level: Log.Level, t: Throwable?, msg: String?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.log","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/log.html","searchKeys":["log","fun log(level: Log.Level, t: Throwable?, msg: String?): Int","io.matthewnelson.kmp.log.Log.Logger.log"]},{"name":"fun of(tag: String?, domain: String?): Log.Logger","description":"io.matthewnelson.kmp.log.Log.Logger.Companion.of","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/-companion/of.html","searchKeys":["of","fun of(tag: String?, domain: String?): Log.Logger","io.matthewnelson.kmp.log.Log.Logger.Companion.of"]},{"name":"fun uninstall(uid: String): Boolean","description":"io.matthewnelson.kmp.log.Log.Root.uninstall","location":"library/log/io.matthewnelson.kmp.log/-log/-root/uninstall.html","searchKeys":["uninstall","fun uninstall(uid: String): Boolean","io.matthewnelson.kmp.log.Log.Root.uninstall"]},{"name":"fun uninstallAll(evenAbortHandler: Boolean)","description":"io.matthewnelson.kmp.log.Log.Root.uninstallAll","location":"library/log/io.matthewnelson.kmp.log/-log/-root/uninstall-all.html","searchKeys":["uninstallAll","fun uninstallAll(evenAbortHandler: Boolean)","io.matthewnelson.kmp.log.Log.Root.uninstallAll"]},{"name":"fun valueOf(value: String): Log.Level","description":"io.matthewnelson.kmp.log.Log.Level.valueOf","location":"library/log/io.matthewnelson.kmp.log/-log/-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Log.Level","io.matthewnelson.kmp.log.Log.Level.valueOf"]},{"name":"fun values(): Array<Log.Level>","description":"io.matthewnelson.kmp.log.Log.Level.values","location":"library/log/io.matthewnelson.kmp.log/-log/-level/values.html","searchKeys":["values","fun values(): Array<Log.Level>","io.matthewnelson.kmp.log.Log.Level.values"]},{"name":"inline fun Log.Logger.d(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","description":"io.matthewnelson.kmp.log.d","location":"library/log/io.matthewnelson.kmp.log/d.html","searchKeys":["d","inline fun Log.Logger.d(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","io.matthewnelson.kmp.log.d"]},{"name":"inline fun Log.Logger.d(t: Throwable?, format: String?, arg: Any?): Int","description":"io.matthewnelson.kmp.log.d","location":"library/log/io.matthewnelson.kmp.log/d.html","searchKeys":["d","inline fun Log.Logger.d(t: Throwable?, format: String?, arg: Any?): Int","io.matthewnelson.kmp.log.d"]},{"name":"inline fun Log.Logger.d(t: Throwable?, format: String?, vararg arguments: Any?): Int","description":"io.matthewnelson.kmp.log.d","location":"library/log/io.matthewnelson.kmp.log/d.html","searchKeys":["d","inline fun Log.Logger.d(t: Throwable?, format: String?, vararg arguments: Any?): Int","io.matthewnelson.kmp.log.d"]},{"name":"inline fun Log.Logger.e(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","description":"io.matthewnelson.kmp.log.e","location":"library/log/io.matthewnelson.kmp.log/e.html","searchKeys":["e","inline fun Log.Logger.e(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","io.matthewnelson.kmp.log.e"]},{"name":"inline fun Log.Logger.e(t: Throwable?, format: String?, arg: Any?): Int","description":"io.matthewnelson.kmp.log.e","location":"library/log/io.matthewnelson.kmp.log/e.html","searchKeys":["e","inline fun Log.Logger.e(t: Throwable?, format: String?, arg: Any?): Int","io.matthewnelson.kmp.log.e"]},{"name":"inline fun Log.Logger.e(t: Throwable?, format: String?, vararg arguments: Any?): Int","description":"io.matthewnelson.kmp.log.e","location":"library/log/io.matthewnelson.kmp.log/e.html","searchKeys":["e","inline fun Log.Logger.e(t: Throwable?, format: String?, vararg arguments: Any?): Int","io.matthewnelson.kmp.log.e"]},{"name":"inline fun Log.Logger.i(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","description":"io.matthewnelson.kmp.log.i","location":"library/log/io.matthewnelson.kmp.log/i.html","searchKeys":["i","inline fun Log.Logger.i(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","io.matthewnelson.kmp.log.i"]},{"name":"inline fun Log.Logger.i(t: Throwable?, format: String?, arg: Any?): Int","description":"io.matthewnelson.kmp.log.i","location":"library/log/io.matthewnelson.kmp.log/i.html","searchKeys":["i","inline fun Log.Logger.i(t: Throwable?, format: String?, arg: Any?): Int","io.matthewnelson.kmp.log.i"]},{"name":"inline fun Log.Logger.i(t: Throwable?, format: String?, vararg arguments: Any?): Int","description":"io.matthewnelson.kmp.log.i","location":"library/log/io.matthewnelson.kmp.log/i.html","searchKeys":["i","inline fun Log.Logger.i(t: Throwable?, format: String?, vararg arguments: Any?): Int","io.matthewnelson.kmp.log.i"]},{"name":"inline fun Log.Logger.log(level: Log.Level, t: Throwable?, format: String?, vararg arguments: Any?): Int","description":"io.matthewnelson.kmp.log.log","location":"library/log/io.matthewnelson.kmp.log/log.html","searchKeys":["log","inline fun Log.Logger.log(level: Log.Level, t: Throwable?, format: String?, vararg arguments: Any?): Int","io.matthewnelson.kmp.log.log"]},{"name":"inline fun Log.Logger.v(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","description":"io.matthewnelson.kmp.log.v","location":"library/log/io.matthewnelson.kmp.log/v.html","searchKeys":["v","inline fun Log.Logger.v(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","io.matthewnelson.kmp.log.v"]},{"name":"inline fun Log.Logger.v(t: Throwable?, format: String?, arg: Any?): Int","description":"io.matthewnelson.kmp.log.v","location":"library/log/io.matthewnelson.kmp.log/v.html","searchKeys":["v","inline fun Log.Logger.v(t: Throwable?, format: String?, arg: Any?): Int","io.matthewnelson.kmp.log.v"]},{"name":"inline fun Log.Logger.v(t: Throwable?, format: String?, vararg arguments: Any?): Int","description":"io.matthewnelson.kmp.log.v","location":"library/log/io.matthewnelson.kmp.log/v.html","searchKeys":["v","inline fun Log.Logger.v(t: Throwable?, format: String?, vararg arguments: Any?): Int","io.matthewnelson.kmp.log.v"]},{"name":"inline fun Log.Logger.w(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","description":"io.matthewnelson.kmp.log.w","location":"library/log/io.matthewnelson.kmp.log/w.html","searchKeys":["w","inline fun Log.Logger.w(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","io.matthewnelson.kmp.log.w"]},{"name":"inline fun Log.Logger.w(t: Throwable?, format: String?, arg: Any?): Int","description":"io.matthewnelson.kmp.log.w","location":"library/log/io.matthewnelson.kmp.log/w.html","searchKeys":["w","inline fun Log.Logger.w(t: Throwable?, format: String?, arg: Any?): Int","io.matthewnelson.kmp.log.w"]},{"name":"inline fun Log.Logger.w(t: Throwable?, format: String?, vararg arguments: Any?): Int","description":"io.matthewnelson.kmp.log.w","location":"library/log/io.matthewnelson.kmp.log/w.html","searchKeys":["w","inline fun Log.Logger.w(t: Throwable?, format: String?, vararg arguments: Any?): Int","io.matthewnelson.kmp.log.w"]},{"name":"inline fun Log.Logger.wtf(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","description":"io.matthewnelson.kmp.log.wtf","location":"library/log/io.matthewnelson.kmp.log/wtf.html","searchKeys":["wtf","inline fun Log.Logger.wtf(t: Throwable?, format: String?, arg1: Any?, arg2: Any?): Int","io.matthewnelson.kmp.log.wtf"]},{"name":"inline fun Log.Logger.wtf(t: Throwable?, format: String?, arg: Any?): Int","description":"io.matthewnelson.kmp.log.wtf","location":"library/log/io.matthewnelson.kmp.log/wtf.html","searchKeys":["wtf","inline fun Log.Logger.wtf(t: Throwable?, format: String?, arg: Any?): Int","io.matthewnelson.kmp.log.wtf"]},{"name":"inline fun Log.Logger.wtf(t: Throwable?, format: String?, vararg arguments: Any?): Int","description":"io.matthewnelson.kmp.log.wtf","location":"library/log/io.matthewnelson.kmp.log/wtf.html","searchKeys":["wtf","inline fun Log.Logger.wtf(t: Throwable?, format: String?, vararg arguments: Any?): Int","io.matthewnelson.kmp.log.wtf"]},{"name":"inline fun d(lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.d","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/d.html","searchKeys":["d","inline fun d(lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.d"]},{"name":"inline fun d(msg: String): Int","description":"io.matthewnelson.kmp.log.Log.Logger.d","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/d.html","searchKeys":["d","inline fun d(msg: String): Int","io.matthewnelson.kmp.log.Log.Logger.d"]},{"name":"inline fun d(t: Throwable): Int","description":"io.matthewnelson.kmp.log.Log.Logger.d","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/d.html","searchKeys":["d","inline fun d(t: Throwable): Int","io.matthewnelson.kmp.log.Log.Logger.d"]},{"name":"inline fun d(t: Throwable?, lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.d","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/d.html","searchKeys":["d","inline fun d(t: Throwable?, lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.d"]},{"name":"inline fun d(t: Throwable?, msg: String?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.d","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/d.html","searchKeys":["d","inline fun d(t: Throwable?, msg: String?): Int","io.matthewnelson.kmp.log.Log.Logger.d"]},{"name":"inline fun e(lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.e","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/e.html","searchKeys":["e","inline fun e(lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.e"]},{"name":"inline fun e(msg: String): Int","description":"io.matthewnelson.kmp.log.Log.Logger.e","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/e.html","searchKeys":["e","inline fun e(msg: String): Int","io.matthewnelson.kmp.log.Log.Logger.e"]},{"name":"inline fun e(t: Throwable): Int","description":"io.matthewnelson.kmp.log.Log.Logger.e","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/e.html","searchKeys":["e","inline fun e(t: Throwable): Int","io.matthewnelson.kmp.log.Log.Logger.e"]},{"name":"inline fun e(t: Throwable?, lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.e","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/e.html","searchKeys":["e","inline fun e(t: Throwable?, lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.e"]},{"name":"inline fun e(t: Throwable?, msg: String?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.e","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/e.html","searchKeys":["e","inline fun e(t: Throwable?, msg: String?): Int","io.matthewnelson.kmp.log.Log.Logger.e"]},{"name":"inline fun i(lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.i","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/i.html","searchKeys":["i","inline fun i(lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.i"]},{"name":"inline fun i(msg: String): Int","description":"io.matthewnelson.kmp.log.Log.Logger.i","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/i.html","searchKeys":["i","inline fun i(msg: String): Int","io.matthewnelson.kmp.log.Log.Logger.i"]},{"name":"inline fun i(t: Throwable): Int","description":"io.matthewnelson.kmp.log.Log.Logger.i","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/i.html","searchKeys":["i","inline fun i(t: Throwable): Int","io.matthewnelson.kmp.log.Log.Logger.i"]},{"name":"inline fun i(t: Throwable?, lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.i","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/i.html","searchKeys":["i","inline fun i(t: Throwable?, lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.i"]},{"name":"inline fun i(t: Throwable?, msg: String?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.i","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/i.html","searchKeys":["i","inline fun i(t: Throwable?, msg: String?): Int","io.matthewnelson.kmp.log.Log.Logger.i"]},{"name":"inline fun installOrThrow(log: Log)","description":"io.matthewnelson.kmp.log.Log.Root.installOrThrow","location":"library/log/io.matthewnelson.kmp.log/-log/-root/install-or-throw.html","searchKeys":["installOrThrow","inline fun installOrThrow(log: Log)","io.matthewnelson.kmp.log.Log.Root.installOrThrow"]},{"name":"inline fun log(level: Log.Level, lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.log","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/log.html","searchKeys":["log","inline fun log(level: Log.Level, lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.log"]},{"name":"inline fun log(level: Log.Level, msg: String): Int","description":"io.matthewnelson.kmp.log.Log.Logger.log","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/log.html","searchKeys":["log","inline fun log(level: Log.Level, msg: String): Int","io.matthewnelson.kmp.log.Log.Logger.log"]},{"name":"inline fun log(level: Log.Level, t: Throwable): Int","description":"io.matthewnelson.kmp.log.Log.Logger.log","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/log.html","searchKeys":["log","inline fun log(level: Log.Level, t: Throwable): Int","io.matthewnelson.kmp.log.Log.Logger.log"]},{"name":"inline fun log(level: Log.Level, t: Throwable?, lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.log","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/log.html","searchKeys":["log","inline fun log(level: Log.Level, t: Throwable?, lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.log"]},{"name":"inline fun of(tag: String?): Log.Logger","description":"io.matthewnelson.kmp.log.Log.Logger.Companion.of","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/-companion/of.html","searchKeys":["of","inline fun of(tag: String?): Log.Logger","io.matthewnelson.kmp.log.Log.Logger.Companion.of"]},{"name":"inline fun uninstall(log: Log): Boolean","description":"io.matthewnelson.kmp.log.Log.Root.uninstall","location":"library/log/io.matthewnelson.kmp.log/-log/-root/uninstall.html","searchKeys":["uninstall","inline fun uninstall(log: Log): Boolean","io.matthewnelson.kmp.log.Log.Root.uninstall"]},{"name":"inline fun uninstallOrThrow(log: Log)","description":"io.matthewnelson.kmp.log.Log.Root.uninstallOrThrow","location":"library/log/io.matthewnelson.kmp.log/-log/-root/uninstall-or-throw.html","searchKeys":["uninstallOrThrow","inline fun uninstallOrThrow(log: Log)","io.matthewnelson.kmp.log.Log.Root.uninstallOrThrow"]},{"name":"inline fun uninstallOrThrow(uid: String)","description":"io.matthewnelson.kmp.log.Log.Root.uninstallOrThrow","location":"library/log/io.matthewnelson.kmp.log/-log/-root/uninstall-or-throw.html","searchKeys":["uninstallOrThrow","inline fun uninstallOrThrow(uid: String)","io.matthewnelson.kmp.log.Log.Root.uninstallOrThrow"]},{"name":"inline fun v(lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.v","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/v.html","searchKeys":["v","inline fun v(lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.v"]},{"name":"inline fun v(msg: String): Int","description":"io.matthewnelson.kmp.log.Log.Logger.v","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/v.html","searchKeys":["v","inline fun v(msg: String): Int","io.matthewnelson.kmp.log.Log.Logger.v"]},{"name":"inline fun v(t: Throwable): Int","description":"io.matthewnelson.kmp.log.Log.Logger.v","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/v.html","searchKeys":["v","inline fun v(t: Throwable): Int","io.matthewnelson.kmp.log.Log.Logger.v"]},{"name":"inline fun v(t: Throwable?, lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.v","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/v.html","searchKeys":["v","inline fun v(t: Throwable?, lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.v"]},{"name":"inline fun v(t: Throwable?, msg: String?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.v","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/v.html","searchKeys":["v","inline fun v(t: Throwable?, msg: String?): Int","io.matthewnelson.kmp.log.Log.Logger.v"]},{"name":"inline fun w(lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.w","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/w.html","searchKeys":["w","inline fun w(lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.w"]},{"name":"inline fun w(msg: String): Int","description":"io.matthewnelson.kmp.log.Log.Logger.w","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/w.html","searchKeys":["w","inline fun w(msg: String): Int","io.matthewnelson.kmp.log.Log.Logger.w"]},{"name":"inline fun w(t: Throwable): Int","description":"io.matthewnelson.kmp.log.Log.Logger.w","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/w.html","searchKeys":["w","inline fun w(t: Throwable): Int","io.matthewnelson.kmp.log.Log.Logger.w"]},{"name":"inline fun w(t: Throwable?, lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.w","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/w.html","searchKeys":["w","inline fun w(t: Throwable?, lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.w"]},{"name":"inline fun w(t: Throwable?, msg: String?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.w","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/w.html","searchKeys":["w","inline fun w(t: Throwable?, msg: String?): Int","io.matthewnelson.kmp.log.Log.Logger.w"]},{"name":"inline fun wtf(lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.wtf","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/wtf.html","searchKeys":["wtf","inline fun wtf(lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.wtf"]},{"name":"inline fun wtf(msg: String): Int","description":"io.matthewnelson.kmp.log.Log.Logger.wtf","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/wtf.html","searchKeys":["wtf","inline fun wtf(msg: String): Int","io.matthewnelson.kmp.log.Log.Logger.wtf"]},{"name":"inline fun wtf(t: Throwable): Int","description":"io.matthewnelson.kmp.log.Log.Logger.wtf","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/wtf.html","searchKeys":["wtf","inline fun wtf(t: Throwable): Int","io.matthewnelson.kmp.log.Log.Logger.wtf"]},{"name":"inline fun wtf(t: Throwable?, lazyMsg: () -> Any?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.wtf","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/wtf.html","searchKeys":["wtf","inline fun wtf(t: Throwable?, lazyMsg: () -> Any?): Int","io.matthewnelson.kmp.log.Log.Logger.wtf"]},{"name":"inline fun wtf(t: Throwable?, msg: String?): Int","description":"io.matthewnelson.kmp.log.Log.Logger.wtf","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/wtf.html","searchKeys":["wtf","inline fun wtf(t: Throwable?, msg: String?): Int","io.matthewnelson.kmp.log.Log.Logger.wtf"]},{"name":"object AbortHandler : Log","description":"io.matthewnelson.kmp.log.Log.AbortHandler","location":"library/log/io.matthewnelson.kmp.log/-log/-abort-handler/index.html","searchKeys":["AbortHandler","object AbortHandler : Log","io.matthewnelson.kmp.log.Log.AbortHandler"]},{"name":"object Companion","description":"io.matthewnelson.kmp.log.Log.Logger.Companion","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/-companion/index.html","searchKeys":["Companion","object Companion","io.matthewnelson.kmp.log.Log.Logger.Companion"]},{"name":"object Root","description":"io.matthewnelson.kmp.log.Log.Root","location":"library/log/io.matthewnelson.kmp.log/-log/-root/index.html","searchKeys":["Root","object Root","io.matthewnelson.kmp.log.Log.Root"]},{"name":"operator fun get(uid: String): Log?","description":"io.matthewnelson.kmp.log.Log.Root.get","location":"library/log/io.matthewnelson.kmp.log/-log/-root/get.html","searchKeys":["get","operator fun get(uid: String): Log?","io.matthewnelson.kmp.log.Log.Root.get"]},{"name":"protected abstract fun log(level: Log.Level, domain: String?, tag: String, msg: String?, t: Throwable?): Boolean","description":"io.matthewnelson.kmp.log.Log.log","location":"library/log/io.matthewnelson.kmp.log/-log/log.html","searchKeys":["log","protected abstract fun log(level: Log.Level, domain: String?, tag: String, msg: String?, t: Throwable?): Boolean","io.matthewnelson.kmp.log.Log.log"]},{"name":"protected constructor(uid: String, min: Log.Level)","description":"io.matthewnelson.kmp.log.Log.Log","location":"library/log/io.matthewnelson.kmp.log/-log/-log.html","searchKeys":["Log","protected constructor(uid: String, min: Log.Level)","io.matthewnelson.kmp.log.Log.Log"]},{"name":"protected constructor(uid: String, min: Log.Level, max: Log.Level)","description":"io.matthewnelson.kmp.log.Log.Log","location":"library/log/io.matthewnelson.kmp.log/-log/-log.html","searchKeys":["Log","protected constructor(uid: String, min: Log.Level, max: Log.Level)","io.matthewnelson.kmp.log.Log.Log"]},{"name":"protected open fun isLoggable(level: Log.Level, domain: String?, tag: String): Boolean","description":"io.matthewnelson.kmp.log.Log.isLoggable","location":"library/log/io.matthewnelson.kmp.log/-log/is-loggable.html","searchKeys":["isLoggable","protected open fun isLoggable(level: Log.Level, domain: String?, tag: String): Boolean","io.matthewnelson.kmp.log.Log.isLoggable"]},{"name":"protected open fun onInstall()","description":"io.matthewnelson.kmp.log.Log.onInstall","location":"library/log/io.matthewnelson.kmp.log/-log/on-install.html","searchKeys":["onInstall","protected open fun onInstall()","io.matthewnelson.kmp.log.Log.onInstall"]},{"name":"protected open fun onUninstall()","description":"io.matthewnelson.kmp.log.Log.onUninstall","location":"library/log/io.matthewnelson.kmp.log/-log/on-uninstall.html","searchKeys":["onUninstall","protected open fun onUninstall()","io.matthewnelson.kmp.log.Log.onUninstall"]},{"name":"protected open override fun log(level: Log.Level, domain: String?, tag: String, msg: String?, t: Throwable?): Boolean","description":"io.matthewnelson.kmp.log.Log.AbortHandler.log","location":"library/log/io.matthewnelson.kmp.log/-log/-abort-handler/log.html","searchKeys":["log","protected open override fun log(level: Log.Level, domain: String?, tag: String, msg: String?, t: Throwable?): Boolean","io.matthewnelson.kmp.log.Log.AbortHandler.log"]},{"name":"val domain: String?","description":"io.matthewnelson.kmp.log.Log.Logger.domain","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/domain.html","searchKeys":["domain","val domain: String?","io.matthewnelson.kmp.log.Log.Logger.domain"]},{"name":"val entries: EnumEntries<Log.Level>","description":"io.matthewnelson.kmp.log.Log.Level.entries","location":"library/log/io.matthewnelson.kmp.log/-log/-level/entries.html","searchKeys":["entries","val entries: EnumEntries<Log.Level>","io.matthewnelson.kmp.log.Log.Level.entries"]},{"name":"val isInstalled: Boolean","description":"io.matthewnelson.kmp.log.Log.AbortHandler.isInstalled","location":"library/log/io.matthewnelson.kmp.log/-log/-abort-handler/is-installed.html","searchKeys":["isInstalled","val isInstalled: Boolean","io.matthewnelson.kmp.log.Log.AbortHandler.isInstalled"]},{"name":"val max: Log.Level","description":"io.matthewnelson.kmp.log.Log.max","location":"library/log/io.matthewnelson.kmp.log/-log/max.html","searchKeys":["max","val max: Log.Level","io.matthewnelson.kmp.log.Log.max"]},{"name":"val min: Log.Level","description":"io.matthewnelson.kmp.log.Log.min","location":"library/log/io.matthewnelson.kmp.log/-log/min.html","searchKeys":["min","val min: Log.Level","io.matthewnelson.kmp.log.Log.min"]},{"name":"val tag: String","description":"io.matthewnelson.kmp.log.Log.Logger.tag","location":"library/log/io.matthewnelson.kmp.log/-log/-logger/tag.html","searchKeys":["tag","val tag: String","io.matthewnelson.kmp.log.Log.Logger.tag"]},{"name":"val uid: String","description":"io.matthewnelson.kmp.log.Log.uid","location":"library/log/io.matthewnelson.kmp.log/-log/uid.html","searchKeys":["uid","val uid: String","io.matthewnelson.kmp.log.Log.uid"]}]