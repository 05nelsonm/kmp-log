// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.matthewnelson.kmp-log:sys>
open class io.matthewnelson.kmp.log.sys/SysLog : io.matthewnelson.kmp.log/Log { // io.matthewnelson.kmp.log.sys/SysLog|null[0]
    final fun isLoggable(io.matthewnelson.kmp.log/Log.Level, kotlin/String?, kotlin/String): kotlin/Boolean // io.matthewnelson.kmp.log.sys/SysLog.isLoggable|isLoggable(io.matthewnelson.kmp.log.Log.Level;kotlin.String?;kotlin.String){}[0]
    final fun log(io.matthewnelson.kmp.log/Log.Level, kotlin/String?, kotlin/String, kotlin/String?, kotlin/Throwable?): kotlin/Boolean // io.matthewnelson.kmp.log.sys/SysLog.log|log(io.matthewnelson.kmp.log.Log.Level;kotlin.String?;kotlin.String;kotlin.String?;kotlin.Throwable?){}[0]

    final object Default : io.matthewnelson.kmp.log.sys/SysLog { // io.matthewnelson.kmp.log.sys/SysLog.Default|null[0]
        final const val UID // io.matthewnelson.kmp.log.sys/SysLog.Default.UID|{}UID[0]
            final fun <get-UID>(): kotlin/String // io.matthewnelson.kmp.log.sys/SysLog.Default.UID.<get-UID>|<get-UID>(){}[0]

        final fun of(io.matthewnelson.kmp.log/Log.Level): io.matthewnelson.kmp.log.sys/SysLog // io.matthewnelson.kmp.log.sys/SysLog.Default.of|of(io.matthewnelson.kmp.log.Log.Level){}[0]
    }
}
